// Code generated by moshi-kotlin-codegen. Do not edit.
package com.positron.migrationtimes.models

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonDataException
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String

class FieldsJsonAdapter(moshi: Moshi) : JsonAdapter<Fields>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("spay_email", "_job_location", "_application", "_company_name", "_company_website", "_company_tagline", "_company_twitter", "_company_video", "_filled", "_featured", "jetpack_publicize_message")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter<String?>(String::class.java, kotlin.collections.emptySet(), "spayEmail")

    private val intAdapter: JsonAdapter<Int> =
            moshi.adapter<Int>(Int::class.java, kotlin.collections.emptySet(), "filled")

    override fun toString(): String = "GeneratedJsonAdapter(Fields)"

    override fun fromJson(reader: JsonReader): Fields {
        var spayEmail: String? = null
        var jobLocation: String? = null
        var application: String? = null
        var companyName: String? = null
        var companyWebsite: String? = null
        var companyTagline: String? = null
        var companyTwitter: String? = null
        var companyVideo: String? = null
        var filled: Int? = null
        var featured: Int? = null
        var jetPackPublicizeMessage: String? = null
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> spayEmail = nullableStringAdapter.fromJson(reader)
                1 -> jobLocation = nullableStringAdapter.fromJson(reader)
                2 -> application = nullableStringAdapter.fromJson(reader)
                3 -> companyName = nullableStringAdapter.fromJson(reader)
                4 -> companyWebsite = nullableStringAdapter.fromJson(reader)
                5 -> companyTagline = nullableStringAdapter.fromJson(reader)
                6 -> companyTwitter = nullableStringAdapter.fromJson(reader)
                7 -> companyVideo = nullableStringAdapter.fromJson(reader)
                8 -> filled = intAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'filled' was null at ${reader.path}")
                9 -> featured = intAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'featured' was null at ${reader.path}")
                10 -> jetPackPublicizeMessage = nullableStringAdapter.fromJson(reader)
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = Fields(
                spayEmail = spayEmail,
                jobLocation = jobLocation,
                application = application,
                companyName = companyName,
                companyWebsite = companyWebsite,
                companyTagline = companyTagline,
                companyTwitter = companyTwitter,
                companyVideo = companyVideo,
                filled = filled ?: throw JsonDataException("Required property 'filled' missing at ${reader.path}"),
                featured = featured ?: throw JsonDataException("Required property 'featured' missing at ${reader.path}"),
                jetPackPublicizeMessage = jetPackPublicizeMessage)
        return result
    }

    override fun toJson(writer: JsonWriter, value: Fields?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("spay_email")
        nullableStringAdapter.toJson(writer, value.spayEmail)
        writer.name("_job_location")
        nullableStringAdapter.toJson(writer, value.jobLocation)
        writer.name("_application")
        nullableStringAdapter.toJson(writer, value.application)
        writer.name("_company_name")
        nullableStringAdapter.toJson(writer, value.companyName)
        writer.name("_company_website")
        nullableStringAdapter.toJson(writer, value.companyWebsite)
        writer.name("_company_tagline")
        nullableStringAdapter.toJson(writer, value.companyTagline)
        writer.name("_company_twitter")
        nullableStringAdapter.toJson(writer, value.companyTwitter)
        writer.name("_company_video")
        nullableStringAdapter.toJson(writer, value.companyVideo)
        writer.name("_filled")
        intAdapter.toJson(writer, value.filled)
        writer.name("_featured")
        intAdapter.toJson(writer, value.featured)
        writer.name("jetpack_publicize_message")
        nullableStringAdapter.toJson(writer, value.jetPackPublicizeMessage)
        writer.endObject()
    }
}
